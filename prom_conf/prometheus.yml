global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'prod-monitor'

alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - 'alertmanager:9093'

rule_files:
  - '/etc/prometheus/rules.yml'
  - '/etc/prometheus/alerts.yml'

#Defines the endpoints (targets) Prometheus will scrape for metrics. This is the most important section as it defines how to gather data.
scrape_configs:

#-----------promethus-----------------------------
- job_name: 'prometheus'
  scheme: 'http' # defaul to http (can be removed)
  static_configs: # List of static targets for Prometheus to scrape. This is the simplest form of service discovery.
  - targets: ['127.0.0.1:9090']

# BEGIN vm_monitor  BLOCK
#--------------vm-host---------------------------------
- job_name: 'local_vm_node_exporter'
  scheme: 'http' # defaul to http (can be removed)
  metrics_path: '/metrics'
  static_configs: # List of static targets for Prometheus to scrape. This is the simplest form of service discovery.
  - targets:
    - '192.168.43.10:9100'
    labels:
      group: 'local_vm_host'
# END ANSIBLE MANAGED BLOCK


# BEGIN vm_monitor  BLOCK
#--------------Jenkins---------------------------------
- job_name: 'jenkins'
  scheme: 'http' # defaul to http (can be removed)
  metrics_path: '/prometheus'
  static_configs: # List of static targets for Prometheus to scrape. This is the simplest form of service discovery.
  - targets:
    - '192.168.43.10:8080'
    labels:
      group: 'jenkins_server'
# END ANSIBLE MANAGED BLOCK

